<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/security
http://www.springframework.org/schema/security/spring-security.xsd">
	
	<!-- now i have to create a intercept because only if i have a intercept 
		my security will work auto-config=true is given to configure my authentication 
		manager -->
	<security:http auto-config="true">
	
	    <security:intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')" />
	   
		
		<security:intercept-url pattern="/**" access="permitAll" />
		<!-- pattern say the url type to  restrict
		access say for whom should i restrict -->
	
		<!-- the page got intercepted but now you need to specify where it should 
			be redirected on interception
			 -->
		<!-- <security:http-basic/> will also generate a form but 
		this will be a pop up form -->
		<security:form-login login-page="/login" username-parameter="user_name" password-parameter="user_password" 
		login-processing-url="/perform_login" default-target-url="/" authentication-failure-forward-url="/login?error=true" 
		authentication-success-forward-url="/loginsuccess"/>
		<!-- this line will call the login form given by spring/userdefined form
		this come as a seperate html page -->
		<security:logout invalidate-session="true" logout-url="/logout"/>
		<security:csrf disabled="true"/>
	</security:http>
	
	<security:authentication-manager>
		<security:authentication-provider>
		
			<security:jdbc-user-service data-source-ref=" myDataSource"
			users-by-username-query="select cust_Email,cust_Password,cust_status from customerCred where cust_Email=?"
			authorities-by-username-query="select cust_Email,cust_Role from customerCred where cust_Email=?"/>
		</security:authentication-provider>
	</security:authentication-manager>
</beans>
